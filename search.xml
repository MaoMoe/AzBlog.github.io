<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>jsp自定义标签的引用</title>
      <link href="/2018/04/23/myTag/"/>
      <url>/2018/04/23/myTag/</url>
      <content type="html"><![CDATA[<p>看到了jsp页面引入的一些标签库,如果这时候我想自己引入一些自定义的标签使用,那大概要多少步骤:</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>自定义标签是一种用户定义的<code>jsp</code>语言元素,可以这么理解,出现可以让代码变得更加简洁和易于维护,去除大多数的java代码.因为当一个页面出现过多的java代码,会变得难以阅读,前后端不易于维护..但是没有java代码,我们也无法完成一些与操作,这时候我们就可以使用标签(tag)</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li>编写一个继承了<code>TagSupport</code>或者实现了<code>SimpleTag</code>接口的类,也就是标签处理类</li><li>编写一个标签库描述符文件,在文件中对标签处理类进行描述</li></ul><h2 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h2><p><strong>标签处理类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义标签的使用</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yuzep</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doStartTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException </span>&#123;</span><br><span class="line">        <span class="comment">/*自定义标签的目的只要是向我们的html页面输出*/</span></span><br><span class="line">        JspWriter out = <span class="keyword">super</span>.pageContext.getOut();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            out.print(<span class="string">"&lt;span&gt;这是一段中文的演示文字&lt;/span&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.doStartTag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>标签库文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp-version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jsp-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">short-name</span>&gt;</span>myTag<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uri</span>&gt;</span>https://loli.me/myTag/<span class="tag">&lt;/<span class="name">uri</span>&gt;</span> ## 我们要引入标签库的的地址</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>out<span class="tag">&lt;/<span class="name">name</span>&gt;</span> ## 标签名</span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>me.lolio.crm.utils.MyTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="页面引入和使用"><a href="#页面引入和使用" class="headerlink" title="页面引入和使用"></a>页面引入和使用</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## 引入</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"myTag"</span> uri=<span class="string">"https://loli.me/myTag/"</span>%&gt;</span><br><span class="line">## 使用</span><br><span class="line">&lt;myTag:out/&gt;</span><br></pre></td></tr></table></figure><blockquote><p>后续补充…</p></blockquote>]]></content>
      
      <categories>
          
          <category> 经历 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM小实例</title>
      <link href="/2018/04/23/crm-demo/"/>
      <url>/2018/04/23/crm-demo/</url>
      <content type="html"><![CDATA[<p>网上搜了某个培训机构的一个实例,QWQ每天控制住自己</p><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p><code>IDE:</code> idea </p><p><code>JDK:</code> 1.8</p><p><code>数据库:</code> mariaDB 10.2</p><h2 id="工程搭建"><a href="#工程搭建" class="headerlink" title="工程搭建"></a>工程搭建</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>使用<code>Bootstrap</code>构建前端网站</p><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>使用<code>ssm</code>框架整合</p><ul><li>controller层:<ul><li>springmvc.xml<ul><li>配置注解驱动</li><li>扫描<code>@Controller</code>注解的类</li><li>配置视图解析器</li></ul></li></ul></li><li>service层<ul><li>applicationContext-service.xml<ul><li>扫描<code>@Service</code>注解的类</li></ul></li><li>applicationContext-trans.xml<ul><li>配置事务,传播行为,配置切面</li></ul></li></ul></li><li>dao层<ul><li>applicationContext-dao.xml<ul><li>配置数据源</li><li>配置<code>SqlSessionFactory</code>对象</li><li>配置mapper文件的扫描器</li></ul></li></ul></li><li>web.xml<ul><li>配置spring的</li><li>配置过滤器,解决乱码问题</li><li>配置前端控制器</li></ul></li></ul><h3 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h3><ul><li><p>创建一个动态的web项目</p></li><li><p>加入jar包</p></li><li><p>加入配置文件</p></li><li><p>加入静态资源</p><p><img src="https://s1.ax1x.com/2018/04/26/C12cLV.png" alt="crm_img"></p></li></ul><h3 id="实际业务"><a href="#实际业务" class="headerlink" title="实际业务"></a>实际业务</h3><h4 id="页面显示-显示用户列表"><a href="#页面显示-显示用户列表" class="headerlink" title="页面显示,显示用户列表"></a>页面显示,显示用户列表</h4><p><code>jsp页面</code>放在了<code>WEB-INF</code>下面,正常浏览器访问是访问不到了,这时候可以用拦截到相应的请求然后进行转发的方式跳转到指定的页面上.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"customer"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"list"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">list</span><span class="params">(QueryVO queryVO)</span> </span>&#123;</span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(); </span><br><span class="line">        modelAndView.setViewName(<span class="string">"customer"</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能会先页面样式丢失的问题,原因是在<code>web.xml</code>配置中,设置了所有的请求都进入到<code>springmvc</code>中,但是<code>springmvc</code>又处理不了静态资源,如法访问,解决方法:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 解决静态资源无法被springmvc处理的问题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="显示所有的客户数据"><a href="#显示所有的客户数据" class="headerlink" title="显示所有的客户数据"></a>显示所有的客户数据</h4><ul><li><p>观察jsp页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> &lt;c:forEach items=<span class="string">"$&#123;page.rows&#125;"</span> var=<span class="string">"row"</span>&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_id&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_name&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_source&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_industry&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_level&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_phone&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_mobile&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;</span><br><span class="line">             &lt;a href="#" class="btn btn-primary btn-xs" data-toggle="modal" data-target="#customerEditDialog" onclick="editCustomer($&#123;row.cust_id&#125;)"&gt;修改&lt;/a&gt;</span><br><span class="line">             &lt;a href="#" class="btn btn-danger btn-xs" onclick="deleteCustomer($&#123;row.cust_id&#125;)"&gt;删除&lt;/a&gt;</span><br><span class="line">         &lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>页面要求我们返回page属性</p></li></ul><blockquote><p> 补充中..</p></blockquote>]]></content>
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows中忘记了mysql的密码(＃°Д°)</title>
      <link href="/2018/04/22/mysql-pwd/"/>
      <url>/2018/04/22/mysql-pwd/</url>
      <content type="html"><![CDATA[<p>之前好久没用的家里电脑QWQ发现数据库的密码突然不记得了(自己的数据库就不要设那么麻烦…自己都不记得了)</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决:"></a>解决:</h2><ul><li><p>首先检查mysql是否关闭,若开启要将其关闭,以管理员方式运行cmd输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li><li><p>打开第一个cmd窗口(cmd1)</p><p>切换到mysql的bin目录,运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --defaults-file=&quot;C:\Program Files\MySQL\MySQL Server 5.1\my.ini&quot; --console --skip-grant-tables</span><br></pre></td></tr></table></figure><p> <code>my.ini</code>:mysql的配置文件,我们可以通过它可以进行免密登陆~</p></li><li><p>打开第二个cmd窗口(cmd2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>出现:<code>Enter:password</code>,不用理会它,敲击回车登陆</p><ul><li><p>使用命令切换到mysql数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br></pre></td></tr></table></figure></li><li><p>使用命令过呢更改密码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE user SET password=PASSWORD(&apos;new password&apos;) WHERE USER=&apos;root&apos;;</span><br></pre></td></tr></table></figure></li><li><p>刷新权限:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li><li><p>退出并检验</p><p><code>quit</code>退出,然后关闭第一个命令行窗口(cmd1).继续(cmd2)使用:<code>net start mysql</code>启动mysql服务</p></li></ul></li></ul><h2 id="SUCCESS"><a href="#SUCCESS" class="headerlink" title="SUCCESS"></a>SUCCESS</h2><p><img src="https://s1.ax1x.com/2018/04/22/CMX6II.png" alt="success"></p>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ⑨ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo获得百度和谷歌收录中出现的问题</title>
      <link href="/2018/04/21/searchConsole/"/>
      <url>/2018/04/21/searchConsole/</url>
      <content type="html"><![CDATA[<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p>昨天在整理完博客之后,发现我如果写的文章,搜索引擎能否能检索到我的文章…之后查了一下.百度好像检索不到<code>github</code>的内容..不过懒的分流了(挖个坑),主要写一下我照的网上的步骤出现了什么问题:</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>来到选择了文件验证,路径放在了<code>blog/source/..</code>下,然后部署上传发现怎么使怎么都没用…等了几分钟,发现还是不行(╯‵□′)╯︵┻━┻,又去查了一下资料:</p><p><img src="https://s1.ax1x.com/2018/04/22/CMXqJ0.png" alt="google_serach"></p><p>因为hexo发布时,默认会对文件格式进行格式化方面的操作,但是我们不想让他帮我们进行这个操作,这样会导致验证不通过.所以我们要告诉hexo,不要进行这种操作啦,需要在百度和谷歌下载的文件上添加一下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line">原文内容</span><br></pre></td></tr></table></figure><p>之后我们验证就:heavy_check_mark:啦(部署完之后尽量等一会在验证)</p><h2 id="百度-网页抓取"><a href="#百度-网页抓取" class="headerlink" title="百度-网页抓取"></a>百度-网页抓取</h2><p>因为github禁止了百度的爬虫,会出现:</p><p><img src="https://i.loli.net/2018/04/21/5adb5cc486efd.png" alt="baidu_error"></p><p>解决方法:做一下分流货这主动/自动推送= =</p><blockquote><p>参考来源:<a href="http://zhuxin.tech/2017/10/20/%E7%BB%99%20Hexo%20%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%AA%8C%E8%AF%81/" target="_blank" rel="noopener">给Hexo搭建的博客增加百度谷歌搜索引擎验证</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DNS解析流程</title>
      <link href="/2018/04/21/dns/"/>
      <url>/2018/04/21/dns/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>DNS(domain name system)</code> :计算机域名服务器.在<code>internal</code>域名和主机<code>ip地址</code>之间时一一对应的,域名只要是方便记忆,但服务器之间只认识<code>ip地址</code>,他们之间的转换工作称之为域名解析,而要进行域名解析需要专门的域名服务器也就是我们的<code>DNS</code></p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>举一个例子，<em>zh.wikipedia.org</em>作为一个域名就和IP地址<em>208.80.154.225</em>相对应。DNS就像是一个自动的电话号码簿，我们可以直接拨打wikipedia的名字来代替电话号码（IP地址）。DNS在我们直接呼叫<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%AB%99" target="_blank" rel="noopener">网站</a>的名字以后就会将像<em>zh.wikipedia.org</em>一样便于人类使用的名字转化成像<em>208.80.154.225</em>一样便于机器识别的IP地址。</p><p>DNS查询有两种方式：<strong>递归</strong>和<strong>迭代</strong>。DNS客户端设置使用的DNS服务器一般都是递归服务器，它负责全权处理客户端的DNS查询请求，直到返回最终结果。而DNS服务器之间一般采用迭代查询方式。</p><p>以查询zh.wikipedia.org为例：</p><ul><li>客户端发送查询报文”query zh.wikipedia.org”至DNS服务器，DNS服务器首先检查自身缓存，如果存在记录则直接返回结果。</li><li><p>如果记录老化或不存在，则</p><ol><li>DNS服务器向<a href="https://zh.wikipedia.org/wiki/%E6%A0%B9%E5%9F%9F%E5%90%8D%E4%BC%BA%E6%9C%8D%E5%99%A8" target="_blank" rel="noopener">根域名服务器</a>发送查询报文”query zh.wikipedia.org”，根域名服务器返回.org域的权威域名服务器地址，这一级首先会返回的是<a href="https://zh.wikipedia.org/wiki/%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%90%8D" target="_blank" rel="noopener">顶级域名</a>的权威域名服务器。</li><li>DNS服务器向.org域的权威域名服务器发送查询报文”query zh.wikipedia.org”，得到.wikipedia.org域的权威域名服务器地址。</li><li>DNS服务器向.wikipedia.org域的权威域名服务器发送查询报文”query zh.wikipedia.org”，得到主机zh的A记录，存入自身缓存并返回给客户端。</li></ol></li></ul><blockquote><p>引用: <a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">域名系统</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>失踪归来~</title>
      <link href="/2018/04/20/miss/"/>
      <url>/2018/04/20/miss/</url>
      <content type="html"><![CDATA[<p>创站好久了..一直没有真正的写好几篇文章,所以为了强迫自己(＃°Д°)绝对每天都会尽力推送文章.</p>]]></content>
      
      <categories>
          
          <category> 杂货 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/04/20/hello-world/"/>
      <url>/2018/04/20/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
