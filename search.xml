<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>某商城实例</title>
      <link href="/2018/05/01/ashop_01/"/>
      <url>/2018/05/01/ashop_01/</url>
      <content type="html"><![CDATA[<p>母亲节快乐，好久没推了。没偷懒~这段时间跑书城阅读还是挺有用的QWQ</p><h2 id="简介-ashop"><a href="#简介-ashop" class="headerlink" title="简介(ashop)"></a>简介(ashop)</h2><p>原型是某ma的淘淘商城，算是一个商城案例。完成品 的业务有：</p><ul><li>后台管理系统：商品管理以及商品发布方面的功能</li><li>前台系统：用户可以登陆、注册、购买商品、浏览商品方面的功能</li><li>会员系统：用户可以浏览自己的订单、历史、收藏的商品方面的功能</li><li>订单系统：有下单、查询订单、修改订单方面的功能</li><li>搜索系统：提供商品的搜索功能</li><li>单点登录系统：为多个系统之间提供用户登录凭证以及查询登录用户的信息</li></ul><h2 id="工程搭建"><a href="#工程搭建" class="headerlink" title="工程搭建"></a>工程搭建</h2><p><code>ashop</code>使用<code></code>maven<code>管理工程，管理jar包，工程之间的依赖管理，自动打包。采用soa架构（面向服务的架构），</code>ashop`的工程将拆分为表现层和服务层两个工程，他们之间要互相通信。</p><p><img src="https://s1.ax1x.com/2018/05/13/CDvv5Q.png" alt="jiagou"></p><h3 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h3><ul><li>spring、springmvc、mybatis</li><li>jsp、jstl、jQuery、EasyUI、kindeditor</li><li>redis（缓存服务器，单点登录，购物车）</li><li>solr（搜索）</li><li>dubbo（分布式服务框架）</li><li>HttpClient（HTTP协议访问客户端）</li><li>ActiveMQ（消息队列）</li><li>FastDFS（图片服务器）</li><li>FreeMarker（网页静态化）</li><li>Nginx（反向代理服务器）</li><li>MyCat（数据库中间件）</li></ul><h3 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h3><ul><li>IntelliJ IDEA 2018.1.3 </li><li>jdk1.8</li><li>mariadb10.3</li><li>git</li><li>dubbo</li><li>maven3.5.2</li><li>….</li></ul><h3 id="后台工程搭建分析"><a href="#后台工程搭建分析" class="headerlink" title="后台工程搭建分析"></a>后台工程搭建分析</h3><ul><li>ashop-parent: 父工程,打包方式 pom,管理jar包的版本号,项目中所有工程都应该继承父工程<ul><li>ashop-common:通用的工具类通用的pojo.打包方式jar</li><li>ashop-manager: 服务层工程.聚合工程.pom工程<ul><li>ashop-manager-dao: 打包方式jar</li><li>ashop-manager-pojo: 打包方式jar</li><li>ashop-manager-interface: 打包方式jar</li><li>ashop-manager-service: 打包方式: war</li></ul></li><li>ashop-manager-web: 表现层工程,打包方式war</li></ul></li></ul><blockquote><p>来源文档，为了规避一些问题，设置了一点权限：</p><p><i class="fab fa-google-drive"></i><a href="https://drive.google.com/file/d/1-c5B6BW48T_gZlwuokTtDuLhBjwAZ0_f/view?usp=sharing" target="_blank" rel="noopener">day01.doc</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>arch安装后可选配置</title>
      <link href="/2018/04/30/arch-other/"/>
      <url>/2018/04/30/arch-other/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为我要当服务器要使用，图形化那些占资源的东西就不装了，如果有需求么可以参照这位老哥的思路:</p><blockquote><p><a href="https://www.viseator.com/2017/05/19/arch_setup/" target="_blank" rel="noopener">ArchLinux图像化</a></p></blockquote><h2 id="安装Oh-My-Zsh"><a href="#安装Oh-My-Zsh" class="headerlink" title="安装Oh My Zsh"></a>安装Oh My Zsh</h2><p><code>zsh</code>是shell语言类型，是 bash 替代品中较为优秀的一个。缺点就是配置太麻烦,不过有一个叫做<code>oh-my-zsh</code>的开源项目，很好的弥补了这一缺陷，只需要修改配置文件，很方便。</p><h3 id="必要软件"><a href="#必要软件" class="headerlink" title="必要软件"></a>必要软件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yaourt -S git zsh wget curl</span></span><br></pre></td></tr></table></figure><p>安装完<code>git</code>别忘记设置它：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.name <span class="string">"YOUR NAME"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git config --global user.email <span class="string">"YOUR EMAIL ADDRESS"</span></span></span><br></pre></td></tr></table></figure><h3 id="root和非root用户同时使用"><a href="#root和非root用户同时使用" class="headerlink" title="root和非root用户同时使用"></a>root和非root用户同时使用</h3><p><strong>先进行非root用户</strong></p><h3 id="非root-安装zsh"><a href="#非root-安装zsh" class="headerlink" title="[非root]安装zsh"></a>[非root]安装zsh</h3><ul><li><p>下载源码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget -O zsh.tar.gz https://sourceforge.net/projects/zsh/files/latest/download</span></span><br></pre></td></tr></table></figure></li><li><p>解压并改名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir ./zsh &amp;&amp; tar -xzvf zsh.tar.gz -C ./zsh --strip-components 1</span></span><br></pre></td></tr></table></figure></li><li><p>安装</p><p>比如将zshs安装到<code></code>~/usr`下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./configure --prefix=<span class="variable">$HOME</span>/usr/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make install</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="非root-安装Oh-My-Zsh"><a href="#非root-安装Oh-My-Zsh" class="headerlink" title="[非root]安装Oh My Zsh"></a>[非root]安装Oh My Zsh</h3><p>如果你在此前尝试过安装Oh My Zsh，务必先删除之：<code>rm -rf ~/.oh-my-zsh</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sh -c <span class="string">"<span class="variable">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>"</span></span></span><br></pre></td></tr></table></figure><p><strong>如果要输入密码的，不要输入。输入的话可能改的是root用户，此时我们直接回车</strong></p><h3 id="root-安装-Oh-My-Zsh"><a href="#root-安装-Oh-My-Zsh" class="headerlink" title="[root] 安装 Oh My Zsh"></a>[root] 安装 Oh My Zsh</h3><p><strong>安装zsh</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> yaourt -S zsh</span></span><br></pre></td></tr></table></figure><p><strong>安装Oh My Zsh</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span></span></span></span><br></pre></td></tr></table></figure><p><strong>完成如图：</strong></p><p><img src="https://s1.ax1x.com/2018/04/30/CGsfaD.png" alt="root_zsh"></p><h3 id="非-root-配置登陆Shell"><a href="#非-root-配置登陆Shell" class="headerlink" title="[非 root]配置登陆Shell"></a>[非 root]配置登陆Shell</h3><p>因为我们没有Root权限，因此无法将本地安装的Zsh添加到<code>/etc/shells</code>。 因此也就不能通过<code>chsh</code>切换到我们本地的<a href="http://www.zsh.org/" target="_blank" rel="noopener">Zsh</a>。 所以我们仍然使用Bash作为登录Shell，而在<code>~/.bashrc</code>中运行我们的Zsh。 在该配置文件尾加入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec $HOME/usr/bin/zsh</span><br></pre></td></tr></table></figure><p><strong>完成</strong></p><p><img src="https://s1.ax1x.com/2018/04/30/CGsIGd.png" alt="zsh_success"></p><blockquote><p><a href="http://harttle.land/2016/10/25/install-oh-my-zsh-locally.html" target="_blank" rel="noopener">没有Root权限Oh My Zsh使用攻略</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> Arch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hyper创建Arch Linux</title>
      <link href="/2018/04/29/arch-create/"/>
      <url>/2018/04/29/arch-create/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本来也是买了个云服务器,可是因为家里是长宽(＃°Д°)(真的是戒网神器)。那延迟，那丢包，那…..经过投诉之后，稍微好点了。可是为了便于自己折腾还是建个虚拟机快一点.</p><p>选择了<code>hyper</code>,可能会有人问为什么不用<code>vmware</code> 或者 <code>vituralbox</code>… 呃(⊙﹏⊙)能说我懒嘛…</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p><code>虚拟机:</code> hyper</p><p><code>linux:</code>ArchLinux</p><p>纯命令行,不装图形化</p><h2 id="搭建虚拟机"><a href="#搭建虚拟机" class="headerlink" title="搭建虚拟机"></a>搭建虚拟机</h2><ul><li>打开Hyper,新建一个虚拟机并指定名称和位置</li><li>指定代数,我选择了第二代(UEFI,如果不是这个的话..可以往最下面看引用)</li><li>指定内存,配置网络,根据自己需要配置硬盘大小</li><li>指定映像文件</li></ul><p><img src="https://s1.ax1x.com/2018/04/29/CGJz8O.png" alt="security"></p><blockquote><p><strong>一定 要在虚拟机设置中,安全选项哪里,关闭安全启动,不然启动的时候可能会部署系统失败(</strong>PXE  Network  Boot using IPv4<strong>)</strong></p></blockquote><h2 id="安装-Arch-Linux"><a href="#安装-Arch-Linux" class="headerlink" title="安装 Arch Linux"></a>安装 Arch Linux</h2><h3 id="检查网络连接"><a href="#检查网络连接" class="headerlink" title="检查网络连接"></a>检查网络连接</h3><p>一般如果我们配置好了网络适配器的话，开机后就有网络的，可以用以下命令检查网络是否连通:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> ping www.baidu.com</span><br></pre></td></tr></table></figure><h3 id="更新系统时间"><a href="#更新系统时间" class="headerlink" title="更新系统时间"></a>更新系统时间</h3><p>首先启动ntp,确保系统时间正确</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> timedatectl set-ntp true</span><br></pre></td></tr></table></figure><h3 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h3><p>身在国内，最好配置一下…因为国外源的访问速度会很慢，修改<code>mirrorlist</code>文件,只需要把含<code>##China</code>移到最开始即可:</p><p><img src="https://s1.ax1x.com/2018/04/29/CGYNzF.png" alt="mirrorlist"></p><h3 id="建立硬盘分区"><a href="#建立硬盘分区" class="headerlink" title="建立硬盘分区"></a>建立硬盘分区</h3><p>可以运用<code>cfdisk</code>来进行友好的分区,在这之前可以用<code>fdisk -l</code>检查自己的分区情况,因为是EFI引导,所以呢要有个EFI分区，一个根分区(挂载到根目录)，和一个交换分区，大体可以参照：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Device        Start       End  Sectors Size Type</span><br><span class="line">/dev/sda1      2048   4196351  4194304   1G EFI System</span><br><span class="line">/dev/sda2   4196352  88078335 83881984  120G Linux root (x86-64)</span><br><span class="line">/dev/sda3  88078336 104857566 16779231   6G Linux swap</span><br></pre></td></tr></table></figure><p><code>write</code>写入并且quit,之后在<code>fdisk -l</code>检查分区情况</p><h3 id="格式化分区"><a href="#格式化分区" class="headerlink" title="格式化分区"></a>格式化分区</h3><p>官方<code>wiki</code>上说<code>After creating the ESP, you must format it as FAT32</code>，所以我们把主分区转换成FAT32格式,主分区为ext4</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mkfs.fat -F32 /dev/sda1</span></span><br><span class="line"><span class="comment"># mkfs.ext4 /dev/sda2</span></span><br><span class="line"><span class="comment"># mkswap /dev/sda3</span></span><br><span class="line"><span class="comment"># swapon /dev/sda3</span></span><br></pre></td></tr></table></figure><h3 id="挂载分区"><a href="#挂载分区" class="headerlink" title="挂载分区"></a>挂载分区</h3><p>格式化完成之后，将根分区挂载到<code>/mnt</code> ，再挂载EFI分区：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mount /dev/sda2 /mnt</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mkdir /mnt/boot</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mount /dev/sda1 /mnt/boot</span></span><br></pre></td></tr></table></figure><h3 id="安装基本系统"><a href="#安装基本系统" class="headerlink" title="安装基本系统"></a>安装基本系统</h3><p>执行<code>pactrap</code>脚本，安装<code>base,base-devel</code>vim选装，因为在安装完系统后，vim是没有的，所以我们可以提前安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pacstrap /mnt base base-devel vim</span></span><br></pre></td></tr></table></figure><h3 id="Fstab"><a href="#Fstab" class="headerlink" title="Fstab"></a>Fstab</h3><p>使用<code>genfstab</code>命令生成<code>fstab</code>文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span></span><br></pre></td></tr></table></figure><h3 id="Chroot"><a href="#Chroot" class="headerlink" title="Chroot"></a>Chroot</h3><p><code>Change root</code> 到新的安装系统:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> arch-chroot /mnt</span></span><br></pre></td></tr></table></figure><h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><p>将系统时区设为东八区：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br></pre></td></tr></table></figure><p>建议使用<code>hwclock</code>设置硬件时钟，并调整时间偏移：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> hwclock --systohc</span></span><br></pre></td></tr></table></figure><h3 id="设置Locale"><a href="#设置Locale" class="headerlink" title="设置Locale"></a>设置Locale</h3><p>设置地域，编辑<code>locale.gen</code>解除<code>en_US.UTF-8 UTF-8</code>的注释。如果需要中文，同时解除<code>zh_CN.UTF-8 UTF-8</code>的注释(中文可能会给命令行模式带来乱码)：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vim /etc/locale.gen</span></span><br></pre></td></tr></table></figure><p>接着执行以下命令生成locale信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> locale-gen</span></span><br></pre></td></tr></table></figure><p>创建 <code>locale.conf</code> 并提交您的本地化选项：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> LANG=en_US.UTF-8 &gt; /etc/locale.conf</span></span><br></pre></td></tr></table></figure><h3 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h3><p>要设置 <code>hostname</code>，将其添加 到<code>/etc/hostname</code>, <code>myhostname</code> 是需要的主机名:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">echo</span> myhostname &gt; /etc/hostname</span></span><br></pre></td></tr></table></figure><p>比如,我的主机名为<code>moe</code>那么还要对应到<code></code>hosts`为:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/hosts</span><br><span class="line">127.0.0.1localhost.localdomainlocalhost</span><br><span class="line">::1localhost.localdomainlocalhost</span><br><span class="line">127.0.1.1myhostname.localdomainmyhostname</span><br></pre></td></tr></table></figure><h3 id="修改root用户的密码"><a href="#修改root用户的密码" class="headerlink" title="修改root用户的密码"></a>修改root用户的密码</h3><p>执行<code>passwd</code></p><h3 id="创建新用户"><a href="#创建新用户" class="headerlink" title="创建新用户"></a>创建新用户</h3><p>不建议一直使用root用户登录，可能会有安全问题，况且有的软件也不支持root用户的安装，所有很有必要创建一个其他用户:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> useradd -m -G wheel username</span></span><br></pre></td></tr></table></figure><blockquote><p><code>-m</code>：在创建时同时在<code>/home</code>目录下创建一个与用户名同名的文件夹，这个目录就是你的<strong>家目录</strong>啦！家目录有一个别名是<code>~</code>，你可以在任何地方使用<code>~</code>来代替家目录路径。这个神奇的目录将会用于存放你所有的个人资料、配置文件等所有跟系统本身无关的资料。这种设定带来了诸多优点：</p><ul><li>只要家目录不变，你重装系统后只需要重新安装一下软件包（它们一般不存放在家目录），然后所有的配置都会从家目录中读取，完全不用重新设置软件着。</li><li>你可以在家目录不变的情况下更换你的发行版而不用重新配置你的环境。</li><li>切换用户后所有的设置会从新的用户的家目录中读取，将不同用户的资料与软件设置等完全隔离。</li><li>有些著名的配置文件比如<code>vim</code>的配置文件<code>~/.vimrc</code>，只要根据自己的使用习惯配置一次， 在另一个<code>Linux</code>系统下（例如你的服务器）把这个文件复制到家目录下，就可以完全恢复你的配置。</li></ul><p><code>-G wheel</code>：<code>-G</code>代表把用户加入一个组，对用户与组的概念感兴趣的同学可以自行查找有关资料学习。后面跟着的<code>wheel</code>就是加入的组名，至于为什么要加入这个组，后面会提到。</p></blockquote><p>给刚创建的新用户设置一个密码,同<code>passwd username</code></p><h4 id="配置sudo执行权限"><a href="#配置sudo执行权限" class="headerlink" title="配置sudo执行权限"></a>配置sudo执行权限</h4><p>要允许我们刚刚所创建的所在的<code>wheel</code>组有执行<code>sudo</code>权限命令的权限,可以使用:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> visudo</span></span><br></pre></td></tr></table></figure><p>解除<code>wheel</code>组前面的注释:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Uncomment to allow members of group wheel to execute any command</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash">wheel ALL=(ALL) ALL</span></span><br></pre></td></tr></table></figure><h4 id="安装Intel-ucode（非IntelCPU可以跳过此步骤）"><a href="#安装Intel-ucode（非IntelCPU可以跳过此步骤）" class="headerlink" title="安装Intel-ucode（非IntelCPU可以跳过此步骤）"></a>安装<code>Intel-ucode</code>（非<code>Intel</code>CPU可以跳过此步骤）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pacman -S intel-ucode</span></span><br></pre></td></tr></table></figure><h3 id="安装引导程序"><a href="#安装引导程序" class="headerlink" title="安装引导程序"></a>安装引导程序</h3><h4 id="安装os-prober"><a href="#安装os-prober" class="headerlink" title="安装os-prober"></a>安装<code>os-prober</code></h4><p>可以配合<code>Grub</code>检测已经存在的系统，自动设置启动选项。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pacman -S os-prober</span></span><br></pre></td></tr></table></figure><h5 id="BIOS-MBR引导方式："><a href="#BIOS-MBR引导方式：" class="headerlink" title="BIOS/MBR引导方式："></a><strong>BIOS/MBR引导方式：</strong></h5><p>往最下面= =跳转到引用链</p><h5 id="EFI-GPT引导方式："><a href="#EFI-GPT引导方式：" class="headerlink" title="EFI/GPT引导方式："></a><strong>EFI/GPT引导方式：</strong></h5><ul><li>安装<code>grub</code>与<code>efibootmgr</code>两个包：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pacman -S grub efibootmgr</span></span><br></pre></td></tr></table></figure><ul><li>部署<code>grub:</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=grub</span></span><br></pre></td></tr></table></figure><ul><li>生成配置文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> grub-mkconfig -o /boot/grub/grub.cfg</span></span><br></pre></td></tr></table></figure><h3 id="安装yaourt"><a href="#安装yaourt" class="headerlink" title="安装yaourt"></a>安装yaourt</h3><p><code>yaourt</code>是非常易用的工具,可以简化用户从AUR软件库安装软件包的过程,建议每个Arch用户都安装.</p><p>在这之前添加一个国内源,需要注意的是<code>yaourt</code> 不能以root用户使用,所以在使用的时候要以非root用户,无需加<code>sudo</code>命令.需要管理员权限时,<code>yaourt</code>会自动让我们输入密码:</p><p><strong>添加<code>archlinuxcn源</code></strong><br>在<code>/etc/pacman.conf</code>文件末添加<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">SigLevel = Never</span><br><span class="line">Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure></p><p><strong>安装yaourt</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pacman -Syu yaourt</span></span><br></pre></td></tr></table></figure><p>可以安装<code>archlinuxcn-keyring</code>包以导入GPG key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> pacman -S archlinuxcn-keyring</span></span><br></pre></td></tr></table></figure><h3 id="设置dhcpcd开机自启"><a href="#设置dhcpcd开机自启" class="headerlink" title="设置dhcpcd开机自启"></a>设置dhcpcd开机自启</h3><p>配置<code>dhcpcd.service</code>开机自启，不然之后重启会 无法上网：</p><h3 id="退出安装环境"><a href="#退出安装环境" class="headerlink" title="退出安装环境"></a>退出安装环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exit</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> umount -R /mnt</span></span><br></pre></td></tr></table></figure><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> reboot</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://wiki.archlinux.org/index.php/Installation_guide" target="_blank" rel="noopener">官方wiki安装说明</a></p><p><a href="http://mirrors.ustc.edu.cn/help/archlinuxcn.html" target="_blank" rel="noopener">Arch Linux CN 源使用帮助</a></p><p><a href="https://www.viseator.com/2017/05/17/arch_install/" target="_blank" rel="noopener">ArchLinux安装教程</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> Arch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jsp自定义标签的引用</title>
      <link href="/2018/04/23/myTag/"/>
      <url>/2018/04/23/myTag/</url>
      <content type="html"><![CDATA[<p>看到了jsp页面引入的一些标签库,如果这时候我想自己引入一些自定义的标签使用,那大概要多少步骤:</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>自定义标签是一种用户定义的<code>jsp</code>语言元素,可以这么理解,出现可以让代码变得更加简洁和易于维护,去除大多数的java代码.因为当一个页面出现过多的java代码,会变得难以阅读,前后端不易于维护..但是没有java代码,我们也无法完成一些与操作,这时候我们就可以使用标签(tag)</p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ul><li>编写一个继承了<code>TagSupport</code>或者实现了<code>SimpleTag</code>接口的类,也就是标签处理类</li><li>编写一个标签库描述符文件,在文件中对标签处理类进行描述</li></ul><h2 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a>简单实例</h2><p><strong>标签处理类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义标签的使用</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> yuzep</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTag</span> <span class="keyword">extends</span> <span class="title">TagSupport</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">doStartTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException </span>&#123;</span><br><span class="line">        <span class="comment">/*自定义标签的目的只要是向我们的html页面输出*/</span></span><br><span class="line">        JspWriter out = <span class="keyword">super</span>.pageContext.getOut();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            out.print(<span class="string">"&lt;span&gt;这是一段中文的演示文字&lt;/span&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.doStartTag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>标签库文件</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jsp-version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jsp-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">short-name</span>&gt;</span>myTag<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uri</span>&gt;</span>https://loli.me/myTag/<span class="tag">&lt;/<span class="name">uri</span>&gt;</span> ## 我们要引入标签库的的地址</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>out<span class="tag">&lt;/<span class="name">name</span>&gt;</span> ## 标签名</span><br><span class="line"><span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>me.lolio.crm.utils.MyTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body-content</span>&gt;</span>JSP<span class="tag">&lt;/<span class="name">body-content</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="页面引入和使用"><a href="#页面引入和使用" class="headerlink" title="页面引入和使用"></a>页面引入和使用</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## 引入</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"myTag"</span> uri=<span class="string">"https://loli.me/myTag/"</span>%&gt;</span><br><span class="line">## 使用</span><br><span class="line">&lt;myTag:out/&gt;</span><br></pre></td></tr></table></figure><blockquote><p>后续补充…</p></blockquote>]]></content>
      
      <categories>
          
          <category> 经历 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM小实例</title>
      <link href="/2018/04/23/crm-demo/"/>
      <url>/2018/04/23/crm-demo/</url>
      <content type="html"><![CDATA[<p>网上搜了某个培训机构的一个实例,QWQ每天控制住自己</p><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p><code>IDE:</code> idea </p><p><code>JDK:</code> 1.8</p><p><code>数据库:</code> mariaDB 10.2</p><h2 id="工程搭建"><a href="#工程搭建" class="headerlink" title="工程搭建"></a>工程搭建</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>使用<code>Bootstrap</code>构建前端网站</p><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>使用<code>ssm</code>框架整合</p><ul><li>controller层:<ul><li>springmvc.xml<ul><li>配置注解驱动</li><li>扫描<code>@Controller</code>注解的类</li><li>配置视图解析器</li></ul></li></ul></li><li>service层<ul><li>applicationContext-service.xml<ul><li>扫描<code>@Service</code>注解的类</li></ul></li><li>applicationContext-trans.xml<ul><li>配置事务,传播行为,配置切面</li></ul></li></ul></li><li>dao层<ul><li>applicationContext-dao.xml<ul><li>配置数据源</li><li>配置<code>SqlSessionFactory</code>对象</li><li>配置mapper文件的扫描器</li></ul></li></ul></li><li>web.xml<ul><li>配置spring的</li><li>配置过滤器,解决乱码问题</li><li>配置前端控制器</li></ul></li></ul><h3 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h3><ul><li><p>创建一个动态的web项目</p></li><li><p>加入jar包</p></li><li><p>加入配置文件</p></li><li><p>加入静态资源</p><p><img src="https://s1.ax1x.com/2018/04/26/C12cLV.png" alt="crm_img"></p></li></ul><h3 id="实际业务"><a href="#实际业务" class="headerlink" title="实际业务"></a>实际业务</h3><h4 id="页面显示-显示用户列表"><a href="#页面显示-显示用户列表" class="headerlink" title="页面显示,显示用户列表"></a>页面显示,显示用户列表</h4><p><code>jsp页面</code>放在了<code>WEB-INF</code>下面,正常浏览器访问是访问不到了,这时候可以用拦截到相应的请求然后进行转发的方式跳转到指定的页面上.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"customer"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"list"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">list</span><span class="params">(QueryVO queryVO)</span> </span>&#123;</span><br><span class="line">        ModelAndView modelAndView = <span class="keyword">new</span> ModelAndView(); </span><br><span class="line">        modelAndView.setViewName(<span class="string">"customer"</span>);</span><br><span class="line">        <span class="keyword">return</span> modelAndView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能会先页面样式丢失的问题,原因是在<code>web.xml</code>配置中,设置了所有的请求都进入到<code>springmvc</code>中,但是<code>springmvc</code>又处理不了静态资源,如法访问,解决方法:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 解决静态资源无法被springmvc处理的问题 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="显示所有的客户数据"><a href="#显示所有的客户数据" class="headerlink" title="显示所有的客户数据"></a>显示所有的客户数据</h4><ul><li><p>观察jsp页面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> &lt;c:forEach items=<span class="string">"$&#123;page.rows&#125;"</span> var=<span class="string">"row"</span>&gt;</span><br><span class="line">     &lt;tr&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_id&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_name&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_source&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_industry&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_level&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_phone&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;$&#123;row.cust_mobile&#125;&lt;/td&gt;</span><br><span class="line">         &lt;td&gt;</span><br><span class="line">             &lt;a href="#" class="btn btn-primary btn-xs" data-toggle="modal" data-target="#customerEditDialog" onclick="editCustomer($&#123;row.cust_id&#125;)"&gt;修改&lt;/a&gt;</span><br><span class="line">             &lt;a href="#" class="btn btn-danger btn-xs" onclick="deleteCustomer($&#123;row.cust_id&#125;)"&gt;删除&lt;/a&gt;</span><br><span class="line">         &lt;/td&gt;</span><br><span class="line">     &lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure><p>页面要求我们返回page属性</p></li></ul><blockquote><p> 补充中..</p></blockquote>]]></content>
      
      <categories>
          
          <category> 练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>windows中忘记了mysql的密码(＃°Д°)</title>
      <link href="/2018/04/22/mysql-pwd/"/>
      <url>/2018/04/22/mysql-pwd/</url>
      <content type="html"><![CDATA[<p>之前好久没用的家里电脑QWQ发现数据库的密码突然不记得了(自己的数据库就不要设那么麻烦…自己都不记得了)</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决:"></a>解决:</h2><ul><li><p>首先检查mysql是否关闭,若开启要将其关闭,以管理员方式运行cmd输入:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li><li><p>打开第一个cmd窗口(cmd1)</p><p>切换到mysql的bin目录,运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --defaults-file=&quot;C:\Program Files\MySQL\MySQL Server 5.1\my.ini&quot; --console --skip-grant-tables</span><br></pre></td></tr></table></figure><p> <code>my.ini</code>:mysql的配置文件,我们可以通过它可以进行免密登陆~</p></li><li><p>打开第二个cmd窗口(cmd2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>出现:<code>Enter:password</code>,不用理会它,敲击回车登陆</p><ul><li><p>使用命令切换到mysql数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br></pre></td></tr></table></figure></li><li><p>使用命令过呢更改密码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE user SET password=PASSWORD(&apos;new password&apos;) WHERE USER=&apos;root&apos;;</span><br></pre></td></tr></table></figure></li><li><p>刷新权限:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li><li><p>退出并检验</p><p><code>quit</code>退出,然后关闭第一个命令行窗口(cmd1).继续(cmd2)使用:<code>net start mysql</code>启动mysql服务</p></li></ul></li></ul><h2 id="SUCCESS"><a href="#SUCCESS" class="headerlink" title="SUCCESS"></a>SUCCESS</h2><p><img src="https://s1.ax1x.com/2018/04/22/CMX6II.png" alt="success"></p>]]></content>
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ⑨ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo获得百度和谷歌收录中出现的问题</title>
      <link href="/2018/04/21/searchConsole/"/>
      <url>/2018/04/21/searchConsole/</url>
      <content type="html"><![CDATA[<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p>昨天在整理完博客之后,发现我如果写的文章,搜索引擎能否能检索到我的文章…之后查了一下.百度好像检索不到<code>github</code>的内容..不过懒的分流了(挖个坑),主要写一下我照的网上的步骤出现了什么问题:</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>来到选择了文件验证,路径放在了<code>blog/source/..</code>下,然后部署上传发现怎么使怎么都没用…等了几分钟,发现还是不行(╯‵□′)╯︵┻━┻,又去查了一下资料:</p><p><img src="https://s1.ax1x.com/2018/04/22/CMXqJ0.png" alt="google_serach"></p><p>因为hexo发布时,默认会对文件格式进行格式化方面的操作,但是我们不想让他帮我们进行这个操作,这样会导致验证不通过.所以我们要告诉hexo,不要进行这种操作啦,需要在百度和谷歌下载的文件上添加一下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: false</span><br><span class="line">---</span><br><span class="line">原文内容</span><br></pre></td></tr></table></figure><p>之后我们验证就:heavy_check_mark:啦(部署完之后尽量等一会在验证)</p><h2 id="百度-网页抓取"><a href="#百度-网页抓取" class="headerlink" title="百度-网页抓取"></a>百度-网页抓取</h2><p>因为github禁止了百度的爬虫,会出现:</p><p><img src="https://i.loli.net/2018/04/21/5adb5cc486efd.png" alt="baidu_error"></p><p>解决方法:做一下分流货这主动/自动推送= =</p><blockquote><p>参考来源:<a href="http://zhuxin.tech/2017/10/20/%E7%BB%99%20Hexo%20%E6%90%AD%E5%BB%BA%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%A2%9E%E5%8A%A0%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E9%AA%8C%E8%AF%81/" target="_blank" rel="noopener">给Hexo搭建的博客增加百度谷歌搜索引擎验证</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DNS解析流程</title>
      <link href="/2018/04/21/dns/"/>
      <url>/2018/04/21/dns/</url>
      <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>DNS(domain name system)</code> :计算机域名服务器.在<code>internal</code>域名和主机<code>ip地址</code>之间时一一对应的,域名只要是方便记忆,但服务器之间只认识<code>ip地址</code>,他们之间的转换工作称之为域名解析,而要进行域名解析需要专门的域名服务器也就是我们的<code>DNS</code></p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>举一个例子，<em>zh.wikipedia.org</em>作为一个域名就和IP地址<em>208.80.154.225</em>相对应。DNS就像是一个自动的电话号码簿，我们可以直接拨打wikipedia的名字来代替电话号码（IP地址）。DNS在我们直接呼叫<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%AB%99" target="_blank" rel="noopener">网站</a>的名字以后就会将像<em>zh.wikipedia.org</em>一样便于人类使用的名字转化成像<em>208.80.154.225</em>一样便于机器识别的IP地址。</p><p>DNS查询有两种方式：<strong>递归</strong>和<strong>迭代</strong>。DNS客户端设置使用的DNS服务器一般都是递归服务器，它负责全权处理客户端的DNS查询请求，直到返回最终结果。而DNS服务器之间一般采用迭代查询方式。</p><p>以查询zh.wikipedia.org为例：</p><ul><li>客户端发送查询报文”query zh.wikipedia.org”至DNS服务器，DNS服务器首先检查自身缓存，如果存在记录则直接返回结果。</li><li><p>如果记录老化或不存在，则</p><ol><li>DNS服务器向<a href="https://zh.wikipedia.org/wiki/%E6%A0%B9%E5%9F%9F%E5%90%8D%E4%BC%BA%E6%9C%8D%E5%99%A8" target="_blank" rel="noopener">根域名服务器</a>发送查询报文”query zh.wikipedia.org”，根域名服务器返回.org域的权威域名服务器地址，这一级首先会返回的是<a href="https://zh.wikipedia.org/wiki/%E9%A1%B6%E7%BA%A7%E5%9F%9F%E5%90%8D" target="_blank" rel="noopener">顶级域名</a>的权威域名服务器。</li><li>DNS服务器向.org域的权威域名服务器发送查询报文”query zh.wikipedia.org”，得到.wikipedia.org域的权威域名服务器地址。</li><li>DNS服务器向.wikipedia.org域的权威域名服务器发送查询报文”query zh.wikipedia.org”，得到主机zh的A记录，存入自身缓存并返回给客户端。</li></ol></li></ul><blockquote><p>引用: <a href="https://zh.wikipedia.org/wiki/%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener">域名系统</a></p></blockquote>]]></content>
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>失踪归来~</title>
      <link href="/2018/04/20/miss/"/>
      <url>/2018/04/20/miss/</url>
      <content type="html"><![CDATA[<p>创站好久了..一直没有真正的写好几篇文章,所以为了强迫自己(＃°Д°)绝对每天都会尽力推送文章.</p>]]></content>
      
      <categories>
          
          <category> 杂货 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/04/20/hello-world/"/>
      <url>/2018/04/20/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
